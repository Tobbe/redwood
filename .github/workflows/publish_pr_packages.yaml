name: Publish PR packages

on:
  workflow_run:
    workflows: ["Create PR Artifact"]
    types:
      - completed

jobs:
  publish_pr_packages:
    name: Publish PR packages
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: create_pr_artifact.yaml
          # workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: success
          # branch: main
          path: artifacts

      - name: Display structure of downloaded files
        run: |
          ls
          echo "-------------------"
          ls -R artifacts

      # - name: Create packages
      #   run: |
      #     mkdir bin
      #     for d in packages/*/ ; do
      #       (cd "$d" && tgz=$(npm pack) && cp $tgz ../../bin/)
      #     done
      #     cd bin
      #     sha="${{ github.event.pull_request.head.sha }}"
      #     for f in * ; do
      #       mv -- "$f" "${f%.tgz}-${sha:0:7}.tgz"
      #     done

      # - name: copy files to s3
      #   env:
      #     aws_key_id: ${{ secrets.AWS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET }}
      #   run: |
      #     sudo apt-get update && sudo apt-get -y install awscli
      #     aws configure set aws_access_key_id $aws_key_id
      #     aws configure set aws_secret_access_key $aws_secret_access_key
      #     aws configure set default.region us-east-1
      #     aws s3 cp --recursive ./bin/ s3://rw-pr-redwoodjs-com/${{ github.event.number }}/

      # - name: Create comment msg
      #   id: comment_msg
      #   run: |
      #     msg="ðŸ“¦ Packages for this PR can be downloaded from%0A"
      #     for p in bin/*; do
      #       msg+="https://rw-pr-redwoodjs-com.s3.amazonaws.com/${{ github.event.number }}/${p#bin/}%0A"
      #     done
      #     msg+="%0AInstall locally with yarn, e.g. \`yarn workspace web add <url>\`"
      #     echo "::set-output name=msg::$msg"

      # - name: Find Comment
      #   uses: peter-evans/find-comment@v1
      #   id: fc
      #   with:
      #     issue-number: ${{ github.event.number }}
      #     comment-author: 'github-actions[bot]'

      # - name: Create comment
      #   if: ${{ steps.fc.outputs.comment-id == 0 }}
      #   uses: peter-evans/create-or-update-comment@v1
      #   with:
      #     issue-number: ${{ github.event.number }}
      #     body: ${{ steps.comment_msg.outputs.msg }}

      # - name: Update comment
      #   if: ${{ steps.fc.outputs.comment-id != 0 }}
      #   uses: peter-evans/create-or-update-comment@v1
      #   with:
      #     comment-id: ${{ steps.fc.outputs.comment-id }}
      #     body: ${{ steps.comment_msg.outputs.msg }}
      #     edit-mode: replace
